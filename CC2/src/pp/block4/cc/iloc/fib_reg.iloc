start:	loadI 1 => r_end
		loadI @n => r_n
		loadI 1 => r_x
		loadI 1 => r_y
		loadI 1 => r_z
cond:	cmp_GT r_n, r_end => r_cmp
		cbr r_cmp -> body, end
body:	add r_x, r_y => r_z
		i2i r_y => r_x
		i2i r_z => r_y
		subI r_n, 1 => r_n
		jumpI -> cond
end:	out "z: ", r_z